import styled, { css } from 'styled-components';

import { DEFAULT_THEME } from '../../common';
import {
  OPTION_HEIGHT,
  PRODUCT_OPTION_HEIGHT,
  OPTION_PADDING,
  PRODUCT_OPTION_PADDING,
} from '../constants';
import type { Size, SelectType } from '../constants';

type PropsType = {
  size: Size;
  $type: SelectType;
  disabled?: boolean;
  selected?: boolean;
};

export const OptionWrapper = styled.div<PropsType>`
  display: flex;
  align-items: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  user-select: none;
  box-sizing: border-box;
  ${({ theme, size, disabled, $type }) => css`
    height: ${$type === 'default' ? OPTION_HEIGHT[size] : PRODUCT_OPTION_HEIGHT};
    padding: ${$type === 'default' ? OPTION_PADDING[size] : PRODUCT_OPTION_PADDING};
    cursor: ${disabled ? 'default' : 'pointer'};
    background-color: ${theme.color.neutral.white};
    color: ${theme.color.neutral[90]};
    & svg {
      fill: ${theme.color.neutral[50]};
    }
  `}

  ${({ selected, theme }) =>
    selected &&
    css`
      color: ${theme.color.primary[60]};
      & svg {
        fill: ${theme.color.primary[60]};
      }
    `}

  ${({ theme, disabled }) =>
    disabled
      ? css`
          color: ${theme.color.neutral[30]};
          & svg {
            fill: ${theme.color.neutral[30]};
          }
        `
      : css`
          &:focus,
          &:hover {
            color: ${theme.color.primary[60]};
            background-color: ${theme.color.neutral[5]};
            & svg {
              fill: ${theme.color.primary[60]};
            }
          }
        `}

  &:focus {
    outline: none;
  }
  & > div {
    overflow: hidden;
  }
`;

OptionWrapper.defaultProps = {
  theme: DEFAULT_THEME,
};
