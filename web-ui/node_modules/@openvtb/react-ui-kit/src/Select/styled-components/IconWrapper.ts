import styled, { css } from 'styled-components';

import { DEFAULT_THEME } from '../../common';
import type { ITheme } from '../../themes';
import { CLOSE_ICON_MARGIN_RIGHT } from '../constants';

type PropsType = {
  opened?: boolean;
  $focused?: boolean;
  disabled: boolean;
};

const commonIconStyles = (theme: ITheme, disabled: boolean, $focused?: boolean) => css`
  cursor: ${disabled ? `default` : 'pointer'};
  fill: ${() => {
    if (disabled) return theme.color.neutral[30];
    if ($focused) return theme.color.primary[60];
    return theme.color.neutral[50];
  }};
  &:hover {
    fill: ${!disabled && theme.color.primary[60]};
  }
`;

export const ArrowIconWrapper = styled.div<PropsType>`
  display: flex;
  align-items: center;
  & svg {
    ${({ theme, disabled, $focused }) => commonIconStyles(theme, disabled, $focused)}
  }
  ${({ opened }) =>
    opened &&
    `
    transform: rotate(180deg);
  `}
`;

ArrowIconWrapper.defaultProps = {
  theme: DEFAULT_THEME,
};

export const CloseIconWrapper = styled.div<PropsType>`
  margin-right: ${CLOSE_ICON_MARGIN_RIGHT};
  display: flex;
  align-items: center;
  & svg {
    ${({ theme, disabled, $focused }) => commonIconStyles(theme, disabled, $focused)}
  }
`;

CloseIconWrapper.defaultProps = {
  theme: DEFAULT_THEME,
};
