import React from 'react';
import { shallow } from 'enzyme';

import { Input } from '../../Inputs';
import { DropdownIndicator } from '../Mask/DropdownIndicator';

jest.mock('../../common', () => ({
  DEFAULT_THEME: {
    color: {
      neutral: {
        50: '',
      },
    },
  },
  Z_INDEXES: {
    INFORMER: 0,
  },
}));

const label = 'Введите номер телефона';
const changeUsernameSpy = jest.fn();

describe('Input.PhoneCountry', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  it('should render component with prop size small', () => {
    const wrapper = shallow(
      <Input.PhoneCountry value={''} onChange={changeUsernameSpy} label={label} size={'small'} />
    );
    expect(wrapper).toMatchSnapshot();
  });

  it('should call onChange when user presses keys in input mask field', () => {
    const wrapper = shallow(
      <Input.PhoneCountry value={''} onChange={changeUsernameSpy} label={label} size={'small'} />
    );
    const input = wrapper.childAt(0);
    input.simulate('change', { value: '123456789', masked: '+7 (123) 456 789' });
    expect(changeUsernameSpy).toBeCalledTimes(1);
    expect(changeUsernameSpy).toBeCalledWith('+7123456789');
  });

  it('should open menu when user clicks on icon', () => {
    const wrapper = shallow(
      <Input.PhoneCountry value={''} onChange={changeUsernameSpy} label={label} size={'small'} />
    );
    const icon = wrapper.childAt(0).dive().find(DropdownIndicator).dive().childAt(1);
    const menu = wrapper.childAt(1);
    expect(menu.prop('menuIsOpen')).toBeFalsy();
    icon.simulate('mouseDown');
    wrapper.update();
    const updateMenu = wrapper.childAt(1);
    expect(updateMenu.prop('menuIsOpen')).toBeTruthy();
  });
});
