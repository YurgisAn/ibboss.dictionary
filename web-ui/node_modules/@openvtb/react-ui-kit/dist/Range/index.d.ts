import React, { ChangeEvent } from 'react';
export interface IRangesProps {
    /** Значение range */
    value: number;
}
export interface IRangeProps {
    /** Уникальный идентификатор */
    id?: string;
    /** Коллбек на изменение состояния */
    onChange: (event: ChangeEvent<HTMLInputElement>, value: string) => void;
    /** Значение range */
    value: string;
    /** Коллбек на изменение блюр */
    onBlur?: (event: ChangeEvent<HTMLInputElement>, value: string) => void;
    /** Массив значений range */
    ranges?: IRangesProps[];
    /** Отключение range */
    disabled?: boolean;
    /** Минимальное значение */
    minValue?: number;
    /** Максимальное значение */
    maxValue?: number;
    /** Ограничение количества символов в поле ввода */
    maxLength?: number;
    /** Шаг слайдера */
    step?: number;
    /** Имя класса для переопределения стилей */
    className?: string;
    /** data-test-id атрибут для тестирования компонента */
    dataTestId?: string;
    /** В инпуте или нет */
    inInput?: boolean;
    /** Длина Range */
    width?: string | number;
}
export declare const Range: React.MemoExoticComponent<({ minValue, maxValue, value, id, onChange, ranges, disabled, className, dataTestId, onBlur, step, inInput, width, ...props }: IRangeProps) => JSX.Element>;
//# sourceMappingURL=index.d.ts.map