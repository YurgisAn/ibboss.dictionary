import React from 'react';
import type { ReactNode, RefObject } from 'react';
import type { SelectType } from './constants';
import type { ISelectComponentItem } from './types';
export declare const areEqual: (a: any, b: any) => boolean;
export declare const findSelectedChild: (childrenArray: ReactNode[], value: any) => React.ReactNode;
export declare const findSelectedItemList: (list: ISelectComponentItem[], value: any, type: SelectType) => ReactNode;
export declare const moveFocus: (list: Element | null, currentFocus: Element | null, calcNextFocus: (list: Element | null, item: Element | null) => any) => void;
export declare const nextItem: (list: Element | null, item: Element | null) => ChildNode | null | undefined;
export declare const previousItem: (list: Element | null, item: Element | null) => ChildNode | null | undefined;
export declare const useClickOutside: (ref: RefObject<HTMLElement>, menuRef: RefObject<HTMLElement>, handler: any) => void;
export declare const getMenuPlacement: (targetRect: DOMRect, menuRect: DOMRect) => "bottom" | "top";
export declare const calcMenuPosition: (target: Element, menu: Element, direction?: 'bottom' | 'top') => {
    left: number;
    top: any;
};
//# sourceMappingURL=utils.d.ts.map