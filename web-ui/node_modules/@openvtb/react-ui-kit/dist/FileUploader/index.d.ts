import { FC } from 'react';
import { IDropzoneFile } from './components';
export { formatBytesToMegabytes } from './utils';
export { DEFAULT_MAX_TOTAL_SIZE } from './constants';
export type { IDropzoneFile } from './components';
export interface IFileUploaderProps {
    /** Список загруженных файлов */
    files?: IDropzoneFile[];
    /** Коллбек при попытке загрузки файла */
    onChange?: (files: IDropzoneFile[]) => void;
    /** Коллбек при удалении файла */
    onRemoveClick?: (file: IDropzoneFile, index: number) => void;
    /** Текст, который отображается в области загрузки */
    uploadText?: string;
    /** Максимальный размер файла (в байтах) */
    maxSize?: number;
    /** Максимальный суммарный размер файлов (в байтах) */
    maxTotalSize?: number;
    /** Минимальный размер файла (в байтах) */
    minSize?: number;
    /** Максимальное количество файлов */
    maxFiles?: number;
    /** Разрешенные типы файлов, подробнее: https://github.com/react-dropzone/attr-accept */
    accept?: string | string[];
    /** Находится ли в выключенном состоянии */
    disabled?: boolean;
    /** Коллбек для формирования ошибки при загрузке кол-ва файлов больше разрешенного */
    getFileCountLimitExceedError?: (exceededCount: number) => string;
    /** Коллбек для формирования ошибки при загрузке файлов суммарно по размеру превышающие допустимое значение */
    getFileTotalSizeLimitExceedError?: (exceededCount: number) => string;
    /** Текст ошибки */
    error?: string;
    /** Имя класса для переопределения стилей */
    className?: string;
    /** data-test-id атрибут для тестирования компонента */
    dataTestId?: string;
    /** Заголовок дропзоны */
    title?: string;
    /** Подзаголовок дропзоны */
    subtitle?: string;
    /** Контейнер, в котором при необходимости можно отрисовать тултип через ReactDOM.createPortal */
    tooltipContainer?: Element | null;
    /** Мобильная версия */
    mobile?: boolean;
}
export declare const FileUploader: FC<IFileUploaderProps>;
//# sourceMappingURL=index.d.ts.map