import React, { ReactNode, FC } from 'react';
import type { SelectType, Size } from './constants';
import { IMultiSelectItem } from './types';
export declare type IMultiSelectItemOptions = IMultiSelectItem | React.ReactNode;
export interface IMultiSelectProps {
    /** Ширина мульти селекта */
    width?: string;
    /** Список опций */
    list: IMultiSelectItemOptions[];
    /** Значение мульти селекта */
    value: IMultiSelectItemOptions[];
    /** Коллбэк на изменение значения multiSelect. MultiSelect является управляемым(controlled) компонентом, поэтому при срабатывании onChange требуется обновления пропса value */
    onChange: (value: IMultiSelectItemOptions[]) => void;
    /** Размер компонента */
    size: Size;
    /** Отключение компонента */
    disabled?: boolean;
    /** Селект с возможностью очищения */
    clearable?: boolean;
    /** Селект в состоянии ошибки */
    error?: boolean;
    /** Верхняя надпись к селекту */
    label?: ReactNode | string;
    /** Плейсхолдер селекта */
    placeholder?: string;
    /** Дополнительный текст под селектом */
    additionalText?: string;
    /** Тип селекта */
    type?: SelectType;
    /** Класс на SelectContainer блок */
    classNameSelectContainer?: string;
    /** Класс на Dropdown блок */
    classNameDropdownList?: string;
    /** Открыть и закрыть меню */
    menuOpenAndClose?: boolean;
    /** Имя класса для переопределения стилей */
    className?: string;
    /** Максимальная ширина чипсов */
    maxWidthChip?: string;
}
export declare const MultiSelect: FC<IMultiSelectProps>;
//# sourceMappingURL=index.d.ts.map