import type { FC, ReactElement } from 'react';
import type { Size } from './TreeBranchComponent';
export interface ITreeBranchProps {
    /** Состояние чекбокса: выбран/не выбран */
    checked?: boolean;
    /** Имя класса для переопределения стилей */
    className?: string;
    /** data-test-id атрибут для тестирования компонента */
    dataTestId?: string;
    /** Показывать/скрывать дочернии ветки */
    expanded?: boolean;
    /** Отображение ветки как заголовка (жирный текст) */
    header?: boolean;
    /** Скрыть чекбокс и отображать только текст (и иконку) */
    hideCheckbox?: boolean;
    /** Иконка, которая будет отображаться слева от текста */
    icon?: ReactElement;
    /** Уникальный идентификатор ветки */
    id: string | number;
    /** Неопределённое состояние чекбокса */
    indeterminate?: boolean;
    /** Текст, который будет отображаться в ветке */
    label: string;
    /** Размер ветки */
    size?: Size;
    /** Коллбэк на изменение состояния чекбокса. Срабатывает при клике или нажатии Enter/Space при переходе по табу */
    onCheck?: (id: string | number, checked: boolean) => void;
    /** Коллбэк на изменение состояния переключателя, отвечающего за показ/скрытие дочерних веток. Срабатывает при клике или нажатии Enter/Space при переходе по табу */
    onExpand?: (id: string | number, expanded: boolean) => void;
}
export declare const TreeBranch: FC<ITreeBranchProps>;
//# sourceMappingURL=index.d.ts.map