import { FC, FocusEvent } from 'react';
import type { Size } from '../Inputs/common/types';
export declare type TTime = {
    hours: string;
    minutes: string;
};
export interface ITimePickerProps {
    /** Значение компонента */
    value: TTime;
    /** Коллбек на изменение состояния */
    onChange: (value: TTime) => void;
    /** Лэйбл к инпуту */
    label?: string;
    /** Размер инпута */
    size?: Size;
    /** Флаг блокировки */
    disabled?: boolean;
    /** Коллбэк на событие фокуса инпута */
    onFocus?: (event: FocusEvent<HTMLInputElement>) => void;
    /** Коллбэк на событие потери фокуса инпута */
    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;
    /** Минимальное значение интервала селекта */
    selectRangeStart?: TTime;
    /** Максимальное значение интервала селекта */
    selectRangeEnd?: TTime;
    /** data-test-id атрибут для тестирования компонента */
    dataTestId?: string;
    /** Имя класса для переопределения стилей */
    className?: string;
    /** Уникальный идентификатор */
    id?: string;
    /** Ширина инпута */
    width?: string | number;
    /** Дополнительный текст под инпутом */
    additionalText?: string;
}
export declare const TimePicker: FC<ITimePickerProps>;
//# sourceMappingURL=index.d.ts.map