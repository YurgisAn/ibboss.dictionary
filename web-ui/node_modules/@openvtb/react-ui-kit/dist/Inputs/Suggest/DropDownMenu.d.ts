import React, { FC, Dispatch, RefObject } from 'react';
import type { Size } from '../common';
import type { IOptionSuggest } from './index';
interface IDropDownMenu {
    showMenu: boolean;
    load: boolean;
    options: (string | IOptionSuggest<any>)[];
    setShowMenu: Dispatch<React.SetStateAction<boolean>>;
    noopMessage: string;
    loadMessage: string;
    tooltipContainer?: Element | null;
    size: Size;
    inputRef?: RefObject<HTMLInputElement>;
    menuMaxHeight: string | number;
    menuIsOpen?: boolean;
    renderElementOption?: (options: string | IOptionSuggest<any>) => any;
    onChange: (value: string | IOptionSuggest<any>) => void;
    setInputValue: Dispatch<React.SetStateAction<string>>;
    inputValue: string;
    selectedItem?: string | IOptionSuggest<any>;
    shouldRenderDropdown: boolean;
}
export declare const DropDownMenu: FC<IDropDownMenu>;
export {};
//# sourceMappingURL=DropDownMenu.d.ts.map