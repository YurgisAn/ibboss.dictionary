import React, { FocusEvent, Dispatch, FC, ReactNode, KeyboardEvent } from 'react';
import type { Status, Size } from '../common';
interface IInputMaskFieldProps {
    /** Имя класса для переопределения стилей */
    className?: string;
    /** Лейбел инпута */
    label?: string;
    /** Подсказка в поле ввода */
    placeholder: string;
    /** Коллбек на изменение  значения инпута */
    onChange: any;
    /** Маска инпута */
    mask: string;
    /** Значение инпута */
    value: any;
    /** Коллбек на изменение фокуса */
    onFocus?: (event: FocusEvent<HTMLInputElement>) => void;
    /** Коллбек на изменение  блюр */
    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;
    /** Обработчи для переключения флага focused */
    setFocused: Dispatch<React.SetStateAction<boolean>>;
    /** Флаг  фокусе инпут или нет */
    focused: boolean;
    /** Отключение поля ввода */
    disabled?: boolean;
    /** Статус поля ввода */
    status?: Status;
    /** Ширина инпута */
    width?: string | number;
    /** Дополнительный текст инпута */
    additionalText?: string;
    /** Иконка для инпута */
    icon?: ReactNode;
    /** Размер инпута */
    size?: Size;
    /** Отображать ли иконку ошибки */
    errorIcon?: boolean;
    /** Внешний реф */
    refInput?: any;
    /** Колбек возвращает value когда закончен ввод по маске */
    onComplete?: (value: any) => void;
    /** Колбек для форматирования value */
    formatValue?: (value: Date | Date[] | string) => string;
    /** Колбек для деформатирования value */
    removeFormatValue?: (value: string, value2?: string) => Date | Array<Date | null> | string | null;
    /** Показывать всегда маску */
    alwaysShowMask?: boolean;
    /** Уникальный идентификатор */
    id?: string;
    /** Коллбек на нажатие клавиш */
    onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void;
    CountryIcon?: any;
    opened?: boolean;
    setOpened?: Dispatch<React.SetStateAction<boolean>>;
    phoneCountry?: boolean;
}
export declare const MaskField: FC<IInputMaskFieldProps>;
export {};
//# sourceMappingURL=MaskField.d.ts.map