/// <reference types="node" />
import { EventEmitter } from 'events';
import type { ILineNotificationProps } from '../LineNotification';
import type { IToastNotificationProps } from '../ToastNotification';
import type { IDynamicNotificationProps } from '../common/Notification/DynamicNotification';
export declare type NotificationType = 'toast' | 'line';
export interface IExtendedNotificationProps extends IDynamicNotificationProps {
    type: NotificationType;
    id: number;
    managed: boolean;
}
declare type INotificationProps = IToastNotificationProps | ILineNotificationProps;
export declare class NotificationManager extends EventEmitter {
    private notifications;
    private emitChange;
    create(type: NotificationType, notification: INotificationProps): void;
    remove(notification: INotificationProps): void;
    addEventListener(callback: any): void;
    removeEventListener(callback: any): void;
}
export {};
//# sourceMappingURL=NotificationManager.d.ts.map