import type { InputStatus } from "../input";
import type { HTMLAttributes, ReactNode } from 'react';
import * as React from 'react';
import { DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components';
export declare const SELECT_DIMENSIONS: readonly ["xl", "m", "s"];
export declare type SelectDimension = typeof SELECT_DIMENSIONS[number];
export interface SelectProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Отключение селекта */
    disabled?: boolean;
    /** Размер Меню */
    dimension?: SelectDimension;
    /** Значение селекта */
    value: number | string | null;
    /** Функция, которая возвращает реакт-компонент с контентом для отображения в cелекте */
    renderInputValue?: (value: number | string | null) => ReactNode;
    /** Обработчик для изменения состояния селекта */
    onChange: (value: number | string | null) => void;
    /** Колбек на открытие селекта */
    onOpen?: () => void;
    /** Колбек на закрытие селекта */
    onClose?: () => void;
    /** Референс на контейнер для правильного позиционирования выпадающего списка */
    portalTargetRef?: React.RefObject<HTMLElement>;
    /**
     * Позволяет выравнивать позицию дропдаун контейнера относительно селекта.
     * Принимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)
     */
    alignDropdown?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
    /**
     *  Задает максимальную высоту контейнера с опциями
     */
    dropMaxHeight?: string | number;
    /** Установка статуса поля */
    status?: InputStatus;
    /** Отображать иконку статуса */
    displayStatusIcon?: boolean;
    /** Иконки для отображения в правом углу поля */
    icons?: React.ReactNode;
    /** Отображает значение без возможности изменения */
    readOnly?: boolean | undefined;
    /** Позволяет добавлять миксин на дроп контейнер созданный с помощью styled css  */
    dropContainerCssMixin?: FlattenInterpolation<ThemeProps<DefaultTheme>>;
}
export declare const Select: React.ForwardRefExoticComponent<SelectProps & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=index.d.ts.map