import * as React from 'react';
import { TextInputProps } from "../TextInput";
export { fitToCurrency, clearValue } from './utils';
export interface NumberInputProps extends Omit<TextInputProps, 'onChange'> {
    /** точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа */
    precision?: number;
    /** префикс (строка, которая выводится перед числовым значением) */
    prefix?: string;
    /** суффикс (строка, которая выводится после числового значения) */
    suffix?: string;
    /** разделитель между тысячами */
    thousand?: string;
    /** разделитель между целым и десятичным */
    decimal?: string;
    /** Шаг инпута */
    step?: number;
    /** Минимальное значение слайдера */
    minValue?: number;
    /** Максимальное значение слайдера */
    maxValue?: number;
    /** Отображать иконки плюса минуса */
    displayPlusMinusIcons?: boolean;
    /** Колбек на изменение значения компонента
     * 1) fullStr - строка вместе с префиксом/суффиксом/разделителями;
     * 2) shortStr - строка только с числом;
     * 3) event - событие ChangeEvent или FocusEvent (колбек onChange может быть вызван не только при изменении значения инпута,
     * но и при потере фокуса инпутом, если значение в инпуте выходит за границы minValue/maxValue и требует корректировки.
     * Примечание: в качестве value компонента необходимо использовать fullStr (строку вместе с префиксом/суффиксом/разделителями).
     */
    onChange?: (fullStr: string, shortStr: string, event: React.ChangeEvent<HTMLInputElement> | React.FocusEvent<HTMLInputElement>) => void;
}
export declare const NumberInput: React.ForwardRefExoticComponent<NumberInputProps & React.RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=index.d.ts.map