import { CustomInputHandler } from "../../common/dom/changeInputData";
import type { InputStatus, ComponentDimension } from "../types";
import type { ForwardedRef, TextareaHTMLAttributes } from 'react';
import * as React from 'react';
export interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {
    /** Максимальное количество символов для ввода */
    maxLength?: number;
    /** Начальная высота компонента в количествах строк */
    rows?: number;
    /** Делает высоту компонента больше или меньше обычной */
    dimension?: ComponentDimension;
    /** Иконки для отображения в правом углу поля */
    icons?: React.ReactNode;
    /** Отображать иконку статуса */
    displayStatusIcon?: boolean;
    /** Отображать иконку очистки поля */
    displayClearIcon?: boolean;
    /** Статус поля */
    status?: InputStatus;
    /** Ref контейнера компонента */
    containerRef?: ForwardedRef<HTMLDivElement>;
    /**
     * Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.
     * Используется для создания масок ввода
     */
    handleInput?: CustomInputHandler;
    /**  Наличие этого атрибута отключает возможность выделения и копирования значения поля */
    disableCopying?: boolean;
    /**  Включает автоматическое изменение высоты компонента в зависимости от количества текста */
    autoHeight?: boolean;
}
export declare const TextArea: React.ForwardRefExoticComponent<TextAreaProps & React.RefAttributes<HTMLTextAreaElement>>;
//# sourceMappingURL=index.d.ts.map