import * as React from 'react';
import { HTMLAttributes } from 'react';
import { TextInputProps } from '../TextInput';
export declare const SearchingPanel: React.FC<HTMLAttributes<HTMLDivElement>>;
export interface SuggestItem {
    searchText: string;
}
export interface SuggestInputProps extends Omit<TextInputProps, 'value'> {
    value?: string;
    /** Отображать статус загрузки данных */
    isLoading?: boolean;
    /** Обработчик выбора опции (дефолтный обработчик подставляет значение опции в поле ввода) */
    onOptionSelect?: (value: string) => void;
    /** Список вариантов для отображения в опциях */
    options?: string[];
    /** Референс на контейнер для правильного позиционирования выпадающего списка */
    portalTargetRef?: React.RefObject<HTMLElement>;
    /**
     * Позволяет выравнивать позицию дропдаун контейнера относительно селекта.
     * Принимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)
     */
    alignDropdown?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
    /** Задает максимальную высоту контейнера с опциями */
    dropMaxHeight?: string | number;
}
export declare const SuggestInput: React.ForwardRefExoticComponent<SuggestInputProps & React.RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=index.d.ts.map