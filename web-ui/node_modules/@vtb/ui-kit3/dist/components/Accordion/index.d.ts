import * as React from 'react';
declare type Dimension = 'l' | 'm';
export interface AccordionItemProps extends Omit<React.HTMLAttributes<HTMLButtonElement>, 'onClick' | 'title'> {
    /** Заголовок компонента */
    title: React.ReactNode;
    /** дефолтное (изначальное) состояние компонента (раскрыт/свернут) при неконтролируемом режиме работы */
    defaultExpanded?: boolean;
    /** состояние компонента (раскрыт/свернут) при контролируемом режиме работы */
    expanded?: boolean;
    /** Колбек на клик по компоненту */
    onClick?: (title: React.ReactNode, expanded: boolean, event: React.MouseEvent<HTMLButtonElement>) => void;
    /**  Устанавливает максимальную высоту, на которую открывается контент до появления вертикального скрола */
    contentMaxHeight?: number | string;
    /** Отключение компонента */
    disabled?: boolean;
}
export declare const AccordionItem: React.FC<AccordionItemProps>;
export interface AccordionProps extends React.HTMLAttributes<HTMLDivElement> {
    dimension?: Dimension;
}
export declare const Accordion: React.FC<AccordionProps>;
export {};
//# sourceMappingURL=index.d.ts.map