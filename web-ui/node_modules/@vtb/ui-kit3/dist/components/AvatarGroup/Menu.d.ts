import * as React from 'react';
import type { AvatarProps } from "../Avatar";
export interface SelectProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Референс на контейнер для правильного позиционирования выпадающего списка */
    portalTargetRef?: React.RefObject<HTMLElement>;
    /**
     * Позволяет выравнивать позицию дропдаун контейнера относительно селекта.
     * Принимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)
     */
    alignDropdown?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
    /** Задает максимальную высоту контейнера с опциями */
    dropMaxHeight?: string | number;
    /** Внешний вид аватара, который будет использован в меню */
    appearance: AvatarProps['appearance'];
    /** Размер аватара, который будет использован в меню */
    dimension: AvatarProps['dimension'];
    onAvatarSelect?: (e: any) => void;
}
export declare const Menu: React.ForwardRefExoticComponent<SelectProps & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=Menu.d.ts.map