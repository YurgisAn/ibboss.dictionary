import * as React from 'react';
declare type Dimension = 'xs' | 's' | 'm' | 'l' | 'xl';
declare type Appearance = 'light' | 'white' | 'grey' | 'dark';
declare type Status = 'success' | 'danger' | 'warn' | 'inactive';
export interface AvatarProps extends React.HTMLAttributes<HTMLButtonElement> {
    /** Имя пользователя, будет использовано внутри тултипа и для генерации аббревиатуры */
    userName: string;
    /** URL аватарки пользователя */
    href?: string;
    /** Статус пользователя */
    status?: Status;
    /** Иконка для отображения */
    icon?: React.ReactNode;
    /** Внешний вид компонента (цвет заливки и текста) - можно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов */
    appearance?: Appearance | {
        background: string;
        text: string;
    };
    /** Размер компонента */
    dimension?: Dimension;
    /** Уникальный идентификатор svg маски */
    svgMaskId?: string;
}
export interface AvatarInternalProps {
    /** Для внутреннего использования! Отображение аватара в составе группы (когда правый край аватара усечен) */
    group?: boolean;
    /** Для внутреннего использования! Отображение тултипа. Тултип убирается, если аватар идет в сочетании с выпадающим меню */
    showTooltip?: boolean;
    /** Для внутреннего использования! Используется ли аватар в качестве меню. Если да - то userName выводится без изменений */
    isMenuAvatar?: boolean;
}
export declare const Avatar: {
    ({ userName, href, status, dimension, icon: Icon, appearance, group, showTooltip, isMenuAvatar, svgMaskId, ...props }: AvatarProps & AvatarInternalProps): JSX.Element;
    displayName: string;
};
export {};
//# sourceMappingURL=index.d.ts.map