import { FlattenInterpolation, ThemeProps, DefaultTheme } from 'styled-components';
import type { PositionInPortalProps } from "../PositionInPortal";
export declare const AnchorWrapper: import("styled-components").StyledComponent<"div", DefaultTheme, {
    anchorCssMixin?: FlattenInterpolation<ThemeProps<DefaultTheme>> | undefined;
}, never>;
export declare const CLOSE_BUTTON_SIZE = 20;
export declare const CLOSE_BUTTON_MARGIN_LEFT = 16;
export declare const CloseButton: import("styled-components").StyledComponent<"button", DefaultTheme, {}, never>;
export declare type Dimension = 's' | 'm' | 'l';
export declare const HintWrapper: import("styled-components").StyledComponent<"div", DefaultTheme, {}, never>;
export declare const HintDialog: import("styled-components").StyledComponent<"div", DefaultTheme, {
    dimension: Dimension;
    isMobile: boolean;
}, never>;
export declare const HintContent: import("styled-components").StyledComponent<"div", DefaultTheme, {}, never>;
export declare const Portal: import("styled-components").StyledComponent<({ targetRef, container, fullContainerWidth, ...props }: import("react").PropsWithChildren<PositionInPortalProps>) => import("react").ReactPortal, DefaultTheme, PositionInPortalProps & {
    flexDirection?: "column" | "column-reverse" | "row" | "row-reverse" | undefined;
}, never>;
export declare const FakeTarget: import("styled-components").StyledComponent<"div", DefaultTheme, {}, never>;
//# sourceMappingURL=style.d.ts.map