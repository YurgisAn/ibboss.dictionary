import { HTMLAttributes } from 'react';
import type { FC, ReactNode } from 'react';
declare type Dimension = 'xl' | 'l' | 'm' | 's';
declare type Appearance = 'primary' | 'secondary';
export interface MultiButtonItem extends HTMLAttributes<HTMLElement> {
    /** Содержимое опции, предназначенное для отображения */
    display: ReactNode;
    /** Уникальный идентификатор опции */
    id: string;
    /** Отключение опции */
    disabled?: boolean;
}
export interface MultiButtonProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {
    /** Массив опций */
    options: Array<MultiButtonItem>;
    /** Выбранная опция */
    selected: string | null;
    /** Колбек на изменение выбранной опции */
    onChange: (id: string) => void;
    /** Колбек на открытие меню */
    onOpen?: () => void;
    /** Колбек на закрытие меню */
    onClose?: () => void;
    /** Размер компонента */
    dimension?: Dimension;
    /** Внешний вид компонента */
    appearance?: Appearance;
    /** Отключение компонента */
    disabled?: boolean;
    /** Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self */
    alignSelf?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
}
export declare const MultiButton: FC<MultiButtonProps>;
export {};
//# sourceMappingURL=index.d.ts.map