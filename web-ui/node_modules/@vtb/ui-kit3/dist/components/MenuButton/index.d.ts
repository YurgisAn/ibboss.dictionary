import type { HTMLAttributes, ReactNode } from 'react';
import * as React from 'react';
declare type Dimension = 'xl' | 'l' | 'm' | 's';
declare type Appearance = 'primary' | 'secondary' | 'ghost';
export interface MenuButtonItem extends HTMLAttributes<HTMLLIElement> {
    /** Содержимое опции, предназначенное для отображения */
    display: ReactNode;
    /** Отключение опции */
    disabled?: boolean;
    /** Значение опции */
    value?: string | number | undefined;
}
export interface MenuButtonProps extends Omit<HTMLAttributes<HTMLButtonElement>, 'onChange'> {
    /** Массив опций */
    options: Array<MenuButtonItem>;
    /** Выбранная опция */
    selected: string | null;
    /** Колбек на изменение выбранной опции */
    onChange: (id: string) => void;
    /** Колбек на открытие меню */
    onOpen?: () => void;
    /** Колбек на закрытие меню */
    onClose?: () => void;
    /** Размер компонента */
    dimension?: Dimension;
    /** Внешний вид компонента */
    appearance?: Appearance;
    /** Отключение компонента */
    disabled?: boolean;
    /** Состояние loading */
    loading?: boolean;
    /** Состояние skeleton */
    skeleton?: boolean;
    /** Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self */
    alignSelf?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
}
export declare const MenuButton: React.ForwardRefExoticComponent<MenuButtonProps & React.RefAttributes<HTMLButtonElement>>;
export {};
//# sourceMappingURL=index.d.ts.map