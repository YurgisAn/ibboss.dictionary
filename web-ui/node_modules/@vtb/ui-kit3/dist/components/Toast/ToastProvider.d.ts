import type { ReactNode } from 'react';
import * as React from 'react';
import type { IdentifyToast } from "./type";
export declare type PositionToasts = 'top-right' | 'bottom-right' | 'bottom-left';
export interface ToastProps {
    /**позиция всплывающей toast */
    position?: PositionToasts;
    /**ширина контейнера toast */
    widthContainer?: number | string;
    /**время через которое удаляются toast */
    autoDeleteTime?: number;
    /**время через которое удаляются toast */
    children?: ReactNode;
}
export interface IContextProps extends ToastProps {
    addToast: (newToast: IdentifyToast) => void;
    removeToast: (removeToast: IdentifyToast) => void;
    clearToasts: () => void;
    toasts: IdentifyToast[];
    removeToastById: (removeId: string) => void;
}
export declare const ToastContext: React.Context<IContextProps>;
export declare const ToastProvider: ({ autoDeleteTime, ...props }: ToastProps) => JSX.Element;
//# sourceMappingURL=ToastProvider.d.ts.map