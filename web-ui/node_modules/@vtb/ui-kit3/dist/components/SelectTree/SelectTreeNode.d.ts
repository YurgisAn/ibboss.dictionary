import React, { ChangeEvent, FC, HTMLAttributes, KeyboardEvent, MouseEvent } from 'react';
export declare type Dimension = 'm' | 's';
export declare type SelectionStatus = 'checked' | 'indeterminate' | 'unchecked';
export interface SelectTreeNodeProps extends HTMLAttributes<HTMLDivElement> {
    label?: React.ReactNode;
    icon?: React.ReactNode;
    checked?: boolean;
    status?: SelectionStatus;
    expanded?: boolean;
    children?: SelectTreeNodeProps[];
}
export interface SelectTreeBranchProps {
    node: SelectTreeNodeProps;
    dimension?: Dimension;
    level: number;
    expandAll: boolean;
    onChange?: (event: ChangeEvent<HTMLInputElement>) => void;
    onButtonClick?: (event: MouseEvent<SVGSVGElement>) => void;
    onKeyDown?: (event: KeyboardEvent<HTMLLIElement>) => void;
}
export declare const SelectTreeNode: FC<SelectTreeBranchProps>;
//# sourceMappingURL=SelectTreeNode.d.ts.map