"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeChildrenForRender = exports.calculateTopPosition = void 0;
var react_1 = __importDefault(require("react"));
var calculateTopPosition = function (children, childrenHeight, key) {
    var found = false;
    return react_1.default.Children.toArray(children).reduce(function (acc, child) {
        var _a;
        var childKey = child.key.replace('.$', '');
        if (found || key === null || key === childKey) {
            found = true;
            return acc;
        }
        else {
            var itemHeight = ((_a = childrenHeight.find(function (i) { return i.key === childKey; })) === null || _a === void 0 ? void 0 : _a.height) || 0;
            return acc + itemHeight;
        }
    }, 0);
};
exports.calculateTopPosition = calculateTopPosition;
var mergeChildrenForRender = function (prevChildren, nextChildren, childrenHeight) {
    var resultChildren = [];
    // Copying all new
    react_1.default.Children.forEach(nextChildren, function (child) { return resultChildren.push(child); });
    // Copying all removed
    react_1.default.Children.forEach(prevChildren, function (child, index) {
        var key = child.key;
        var isRemoved = !react_1.default.Children.toArray(nextChildren).some(function (nc) { return nc.key.replace('.$', '') === key; });
        if (isRemoved)
            resultChildren.splice(index, 0, child);
    });
    // Create an object with attributes for rendering
    var result = react_1.default.Children.map(resultChildren, function (child) {
        var _a;
        var key = child.key;
        var height = (((_a = childrenHeight.find(function (ch) { return ch.key === key; })) === null || _a === void 0 ? void 0 : _a.height) || 0);
        var newChild = !react_1.default.Children.toArray(prevChildren).some(function (pc) { return pc.key.replace('.$', '') === key; });
        var removedChild = !react_1.default.Children.toArray(nextChildren).some(function (pc) { return pc.key.replace('.$', '') === key; });
        return { key: key, child: child, height: height, newChild: newChild, removedChild: removedChild };
    });
    return (result === null || result === void 0 ? void 0 : result.map(function (item) {
        var prevTopPosition = exports.calculateTopPosition(prevChildren, childrenHeight, item.key);
        var newTopPosition = exports.calculateTopPosition(result === null || result === void 0 ? void 0 : result.filter(function (i) { return !i.newChild; }).map(function (i) { return i.child; }), childrenHeight, item.key);
        var translateY = prevTopPosition - newTopPosition;
        return __assign(__assign({}, item), { translateY: translateY });
    })) || [];
};
exports.mergeChildrenForRender = mergeChildrenForRender;
//# sourceMappingURL=utils.js.map