import React, { MouseEvent } from 'react';
import { TransitionList } from 'transition-list';

import { EmptyNotification, NotificationListContainer, ScrollWrapper, ViewedWrapper } from './styled';
import { NotificationAlertExtended } from '../../types';
import { NotificationItem } from '../NotificationItem';

type PropsType = {
    list: Array<NotificationAlertExtended>
    onClick?: (e: MouseEvent<HTMLDivElement>, id?: any) => void
}

export const NotificationList: React.FC<PropsType> = props => {

    const { list, onClick } = props;

    const newNotificationList = list.filter(n => n.new && n.memorable);
    const viewedNotificationList = list.filter(n => !n.new && n.memorable);

    const thereAreNew = !!newNotificationList.length;
    const thereAreViewed = !!viewedNotificationList.length;

    return (
        <NotificationListContainer data-name="notification-list">
            <ScrollWrapper>
                <h1>Уведомления</h1>
                {thereAreNew && (
                    <>
                        <h2>Новые</h2>
                        <TransitionList>
                            {newNotificationList.map(n => (
                                <NotificationItem key={n.id} {...n} closable={false} onClick={onClick}/>
                            ))}
                        </TransitionList>
                    </>
                )}

                {thereAreViewed && (
                    <ViewedWrapper>
                        <h2>Просмотренные</h2>
                        <TransitionList>
                            {viewedNotificationList.map(n => (
                                <NotificationItem key={n.id} {...n} closable={false} onClick={onClick}/>
                            ))}
                        </TransitionList>
                    </ViewedWrapper>
                )}

                {!thereAreNew && !thereAreViewed && (
                    <EmptyNotification>Нет уведомлений</EmptyNotification>
                )}
            </ScrollWrapper>
        </NotificationListContainer>
    );
};