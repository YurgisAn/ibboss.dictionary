import { LocaleType } from "./constants";
export { addDays, addMonths, addWeeks, addYears, after, before, changeTime, compareDates, dayInRange, differenceDays, differenceMonths, differenceYears, endOfWeek, equal, getFormattedValue, lastDayOfMonth, outOfBounds, sameDay, sameMonth, setMonth, setYear, startOfMonth, startOfWeek, startOfYear, subMonths, subYears, valid, weekInMonth, yearsRange, };
declare const addDays: (current: Date, amount: number) => Date;
declare const addWeeks: (date: Date, amount: number) => Date;
declare const addYears: (date: Date, amount: number) => Date;
declare const addMonths: (current: Date, amount: number) => Date;
declare const after: (date: Date, dateToCompare: Date) => boolean;
declare const before: (date: Date, dateToCompare: Date) => boolean;
declare const changeTime: (dateTime: Date, newTime?: Date | null | undefined) => Date;
declare const compareDates: (date1?: Date | null | undefined, date2?: Date | null | undefined) => number;
declare const dayInRange: (day: Date, startDate: Date, endDate: Date) => boolean;
declare const differenceDays: (dateLeft: Date, dateRight: Date) => number;
declare const differenceMonths: (dateLeft: Date, dateRight: Date) => number;
declare const differenceYears: (dateLeft: Date, dateRight: Date) => number;
declare const endOfWeek: (current: Date, localeName: LocaleType) => Date;
declare const equal: (date1?: Date | null | undefined, date2?: Date | null | undefined) => boolean;
declare const getFormattedValue: (date: Date | null, options: any, localeName: LocaleType) => string;
declare const lastDayOfMonth: (date: Date) => number;
declare const outOfBounds: (day: Date, minDate?: Date | null | undefined, maxDate?: Date | null | undefined) => boolean | null | undefined;
declare const sameDay: (date1?: Date | null | undefined, date2?: Date | null | undefined) => boolean;
declare const sameMonth: (date1?: Date | null | undefined, date2?: Date | null | undefined) => boolean;
declare const setMonth: (date: Date, month: number) => Date;
declare const setYear: (date: Date, year: number) => Date;
declare const subYears: (date: Date, amount: number) => Date;
declare const startOfYear: (startDate: Date) => Date;
declare const startOfMonth: (someDate: Date) => Date;
declare const weekInMonth: (startOfWeek: Date, day: Date) => boolean;
declare const yearsRange: (date: Date, yearCount: number) => {
    start: number;
    end: number;
};
declare const startOfWeek: (current: Date, localeName: LocaleType) => Date;
declare const subMonths: (date: Date, amount: number) => Date;
declare const valid: (date: any) => boolean;
//# sourceMappingURL=date-utils.d.ts.map