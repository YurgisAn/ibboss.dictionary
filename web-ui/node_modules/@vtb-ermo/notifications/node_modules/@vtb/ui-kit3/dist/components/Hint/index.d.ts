import type { FC, ReactNode } from 'react';
import React, { HTMLAttributes } from 'react';
import type { RefCallback, RefObject } from "../common/utils/handleRef";
import type { Dimension } from "./styled";
declare type Trigger = 'click' | 'hover';
export interface HintProps extends HTMLAttributes<HTMLDivElement> {
    /** Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание */
    renderContent: () => ReactNode;
    /** Контейнер, в котором будет отрисован тултип через React.createPortal. По умолчанию тултип отрисовывается в document.body */
    container?: Element | null;
    /** Элемент, относительно которого будет позиционироваться хинт, если позиционирование относительно children не подходит */
    target?: React.MutableRefObject<Element | null | undefined>;
    /** Триггер появления компонента (событие, которое вызывает появление хинта) */
    visibilityTrigger?: Trigger;
    /** Отображение компонента для мобильной версии (менее 640px), хинт адаптируется под ширину экрана */
    isMobile?: boolean;
    /** Размер компонента */
    dimension?: Dimension;
    /** Ссылка на тултип */
    hintRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement> | null;
}
export declare const Hint: FC<HintProps>;
export {};
//# sourceMappingURL=index.d.ts.map