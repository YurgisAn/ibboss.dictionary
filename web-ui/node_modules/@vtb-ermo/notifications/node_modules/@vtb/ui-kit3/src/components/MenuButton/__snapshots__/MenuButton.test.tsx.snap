// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuButton should render component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        aria-expanded="false"
        class="sc-fnVZcZ cWQKOS"
        data-appearance="primary"
        data-dimension="l"
        data-testid="btn"
        type="button"
      >
        <span
          class="sc-fFSPTT iyNHiT"
        >
          <span>
            test
          </span>
          <div
            aria-hidden="true"
            class="sc-kfYoZR jyqmSL"
          />
        </span>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-expanded="false"
      class="sc-fnVZcZ cWQKOS"
      data-appearance="primary"
      data-dimension="l"
      data-testid="btn"
      type="button"
    >
      <span
        class="sc-fFSPTT iyNHiT"
      >
        <span>
          test
        </span>
        <div
          aria-hidden="true"
          class="sc-kfYoZR jyqmSL"
        />
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`MenuButton should render component with loading state 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        aria-expanded="false"
        class="sc-fnVZcZ cWQKOS"
        data-appearance="primary"
        data-dimension="l"
        data-testid="btn"
        disabled=""
        type="button"
      >
        <span
          class="sc-fFSPTT iyNHiT"
        >
          <div
            aria-live="assertive"
            class="sc-bkbkJK fNqLBl"
            role="alert"
          >
            <div />
          </div>
        </span>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-expanded="false"
      class="sc-fnVZcZ cWQKOS"
      data-appearance="primary"
      data-dimension="l"
      data-testid="btn"
      disabled=""
      type="button"
    >
      <span
        class="sc-fFSPTT iyNHiT"
      >
        <div
          aria-live="assertive"
          class="sc-bkbkJK fNqLBl"
          role="alert"
        >
          <div />
        </div>
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`MenuButton should render component with skeleton state 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        aria-expanded="false"
        class="sc-fnVZcZ cWQKOS"
        data-appearance="primary"
        data-dimension="l"
        data-testid="btn"
        disabled=""
        type="button"
      >
        <span
          class="sc-fFSPTT iyNHiT"
        >
          <div
            class="sc-bdnxRM sc-fKgJPI fodwd bXYabr"
          />
          <div
            class="sc-gtsrHT fEuUPA"
          />
        </span>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-expanded="false"
      class="sc-fnVZcZ cWQKOS"
      data-appearance="primary"
      data-dimension="l"
      data-testid="btn"
      disabled=""
      type="button"
    >
      <span
        class="sc-fFSPTT iyNHiT"
      >
        <div
          class="sc-bdnxRM sc-fKgJPI fodwd bXYabr"
        />
        <div
          class="sc-gtsrHT fEuUPA"
        />
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
