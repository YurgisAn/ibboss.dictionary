import type { SelectProps } from '~/components/Select';
import { Select as BaseSelect } from '~/components/Select';
import * as React from 'react';
import { Field } from '~/components/Field';
import styled from 'styled-components';
import { uid } from '~/components/common/uid';

const Select = styled(BaseSelect)`
  [data-status='error'] & {
    border-color: ${(props) => props.theme.color.status.danger};
  }
`;

export interface SelectFieldProps extends SelectProps, Omit<React.ComponentPropsWithoutRef<typeof Field>, 'onChange'> {}

export const SelectField = React.forwardRef<HTMLDivElement, SelectFieldProps>((props, ref) => {
  const { className, status, extraText, label, id = uid(), ...restProps } = props;
  const fieldContainerProps = { className, extraText, status, label, id };
  const selectProps = { ref, id, ...restProps };
  return (
    <Field {...fieldContainerProps}>
      <Select {...selectProps} />
    </Field>
  );
});

SelectField.displayName = 'SelectField';
