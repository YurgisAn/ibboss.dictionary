// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Toggle should render component with disabled state 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <label
        class="sc-bkbkJK bVwkLt"
        disabled=""
        role="switch"
      >
        <input
          class="sc-ksluID bBxcjA"
          data-testid="element"
          disabled=""
          type="checkbox"
        />
        <span
          aria-hidden="true"
          class="sc-fFSPTT cJzPKc"
          disabled=""
        />
        <div
          class="sc-hBMUJo kkRIMW"
          disabled=""
        >
          text
        </div>
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="sc-bkbkJK bVwkLt"
      disabled=""
      role="switch"
    >
      <input
        class="sc-ksluID bBxcjA"
        data-testid="element"
        disabled=""
        type="checkbox"
      />
      <span
        aria-hidden="true"
        class="sc-fFSPTT cJzPKc"
        disabled=""
      />
      <div
        class="sc-hBMUJo kkRIMW"
        disabled=""
      >
        text
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Toggle should render component with left labelPosition 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <label
        class="sc-bkbkJK ixnIOQ"
        role="switch"
      >
        <input
          class="sc-ksluID bBxcjA"
          data-testid="element"
          type="checkbox"
        />
        <span
          aria-hidden="true"
          class="sc-fFSPTT cJzPKc"
        />
        <div
          class="sc-hBMUJo inAYnV"
        >
          text
        </div>
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="sc-bkbkJK ixnIOQ"
      role="switch"
    >
      <input
        class="sc-ksluID bBxcjA"
        data-testid="element"
        type="checkbox"
      />
      <span
        aria-hidden="true"
        class="sc-fFSPTT cJzPKc"
      />
      <div
        class="sc-hBMUJo inAYnV"
      >
        text
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Toggle should render component with required properties 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <label
        class="sc-bkbkJK cNUWHZ"
        role="switch"
      >
        <input
          class="sc-ksluID bBxcjA"
          data-testid="element"
          type="checkbox"
        />
        <span
          aria-hidden="true"
          class="sc-fFSPTT cJzPKc"
        />
        <div
          class="sc-hBMUJo iKEmne"
        >
          text
        </div>
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="sc-bkbkJK cNUWHZ"
      role="switch"
    >
      <input
        class="sc-ksluID bBxcjA"
        data-testid="element"
        type="checkbox"
      />
      <span
        aria-hidden="true"
        class="sc-fFSPTT cJzPKc"
      />
      <div
        class="sc-hBMUJo iKEmne"
      >
        text
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Toggle should render component with small dimension 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <label
        class="sc-bkbkJK cNUWHZ"
        role="switch"
      >
        <input
          class="sc-ksluID rLUQI"
          data-testid="element"
          type="checkbox"
        />
        <span
          aria-hidden="true"
          class="sc-fFSPTT dEbUMu"
        />
        <div
          class="sc-hBMUJo dQGZrR"
        >
          text
        </div>
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="sc-bkbkJK cNUWHZ"
      role="switch"
    >
      <input
        class="sc-ksluID rLUQI"
        data-testid="element"
        type="checkbox"
      />
      <span
        aria-hidden="true"
        class="sc-fFSPTT dEbUMu"
      />
      <div
        class="sc-hBMUJo dQGZrR"
      >
        text
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
