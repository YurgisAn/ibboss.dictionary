import React from 'react';
import { Meta, Story } from '@storybook/react';
import { withDesign } from 'storybook-addon-designs';
import { ReactComponent as MinusCircleOutline } from '@openvtb/admiral-icons/build/service/MinusCircleOutline.svg';
import { TabMenu, TabMenuProps } from '.';

export default {
  title: 'Example/TabMenu',
  decorators: [withDesign],
  component: TabMenu,
  parameters: {
    layout: 'centered',
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/nwmAE2QMjzDD1FECyC2EUL/01-%E2%9C%85-UI-Kit-2.1-Internet-bank?node-id=67577%3A86727',
    },
  },
  argTypes: {
    dimension: {
      options: ['l', 'm'],
      control: { type: 'radio' },
    },
    underline: {
      control: { type: 'boolean' },
    },
    mobile: {
      control: { type: 'boolean' },
    },
  },
} as Meta;

const Template1: Story<TabMenuProps> = (args) => {
  const [selected, setSelected] = React.useState<string>('3');
  return (
    <TabMenu
      {...args}
      activeTab={selected}
      onChange={(id) => {
        setSelected(id);
      }}
      tabs={[
        {
          id: '1',
          content: 'Option 1',
          icon: <MinusCircleOutline />,
        },
        {
          id: '2',
          content: 'Option 22',
        },
        {
          id: '3',
          content: 'Option 333',
          badge: 5,
        },
        {
          id: '4',
          content: 'Option 4444',
        },
        {
          id: '5',
          content: 'Option 55555',
          badge: 4,
          icon: <MinusCircleOutline />,
        },
        {
          id: '6',
          content: 'Option 666666',
        },
      ]}
    />
  );
};

const Template2: Story<TabMenuProps> = (args) => {
  const [selected, setSelected] = React.useState<string>('3');
  return (
    <TabMenu
      {...args}
      activeTab={selected}
      onChange={(id) => {
        setSelected(id);
      }}
      tabs={[
        {
          id: '1',
          content: 'Option 1',
          icon: <MinusCircleOutline />,
        },
        {
          id: '2',
          content: 'Option 22',
        },
        {
          id: '3',
          content: 'Option 333',
          badge: 5,
        },
        {
          id: '4',
          content: 'Option 4444',
        },
        {
          id: '5',
          content: 'Option 55555',
          badge: 4,
          icon: <MinusCircleOutline />,
        },
        {
          id: '6',
          content: 'Option 666666',
        },
      ]}
      underline
    />
  );
};

const Template3: Story<TabMenuProps> = (args) => {
  const [selected, setSelected] = React.useState<string>('3');
  return (
    <TabMenu
      {...args}
      activeTab={selected}
      onChange={(id) => {
        setSelected(id);
      }}
      tabs={[
        {
          id: '1',
          content: 'Option 1',
          icon: <MinusCircleOutline />,
          disabled: true,
        },
        {
          id: '2',
          content: 'Option 22',
        },
        {
          id: '3',
          content: 'Option 333',
          badge: 5,
        },
        {
          id: '4',
          content: 'Option 4444',
          disabled: true,
        },
        {
          id: '5',
          content: 'Option 55555',
        },
        {
          id: '6',
          content: 'Option 666666',
        },
        {
          id: '7',
          content: 'Option 77',
          disabled: true,
        },
      ]}
    />
  );
};

const Template4: Story<TabMenuProps> = (args) => {
  const [selected, setSelected] = React.useState<string>('3');
  return (
    <TabMenu
      {...args}
      activeTab={selected}
      onChange={(id) => {
        setSelected(id);
      }}
      tabs={[
        {
          id: '1',
          content: 'Option 1',
          icon: <MinusCircleOutline />,
        },
        {
          id: '2',
          content: 'Option 22',
        },
        {
          id: '3',
          content: 'Option 333',
          badge: 5,
        },
        {
          id: '4',
          content: 'Option 4444',
        },
        {
          id: '5',
          content: 'Option 55555',
        },
        {
          id: '6',
          content: 'Some very long long long long option',
        },
      ]}
    />
  );
};

export const OverflowMenuBase = Template1.bind({});
OverflowMenuBase.args = {};
OverflowMenuBase.storyName = 'TabMenu. Базовый пример.';
OverflowMenuBase.parameters = {
  docs: {
    source: {
      type: 'code',
    },
  },
};

export const OverflowMenuUnderline = Template2.bind({});
OverflowMenuUnderline.args = {};
OverflowMenuUnderline.storyName = 'TabMenu. Пример с нижней серой полосой.';
OverflowMenuUnderline.parameters = {
  docs: {
    source: {
      type: 'code',
    },
  },
};

export const OverflowMenuDisabled = Template3.bind({});
OverflowMenuDisabled.args = {};
OverflowMenuDisabled.storyName = 'TabMenu. Пример с задизейбленными табами.';
OverflowMenuDisabled.parameters = {
  docs: {
    source: {
      type: 'code',
    },
  },
};

export const OverflowMenuTooltip = Template4.bind({});
OverflowMenuTooltip.args = {};
OverflowMenuTooltip.storyName = 'TabMenu. Пример с тултипом.';
OverflowMenuTooltip.parameters = {
  docs: {
    source: {
      type: 'code',
    },
  },
};
