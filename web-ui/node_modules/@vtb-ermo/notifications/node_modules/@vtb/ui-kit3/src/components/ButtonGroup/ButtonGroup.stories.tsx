import React, { useState } from 'react';
import styled from 'styled-components';
import { Meta, Story } from '@storybook/react';
import { ButtonGroup, ButtonGroupProps } from './index';
import { ButtonGroupItem } from '~/components';
import { ReactComponent as StarSolid } from '@openvtb/admiral-icons/build/system/StarSolid.svg';
import { Additional_L_normal } from '../Typography';
import { withDesign } from 'storybook-addon-designs';

const Devider = styled.div`
  width: 10px;
`;

const Separator = styled.div`
  height: 20px;
`;

export default {
  title: 'Example/ButtonGroup',
  decorators: [withDesign],
  component: ButtonGroup,
  parameters: {
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/nwmAE2QMjzDD1FECyC2EUL/%E2%9C%85-UI-Kit-2.1-Internet-bank?node-id=63515%3A70935',
    },
  },
  argTypes: {
    dimension: {
      control: {
        type: 'radio',
        options: ['l', 'm', 's'],
      },
    },
  },
} as Meta;

const ButtonGroupDemo: Story<ButtonGroupProps> = () => {
  const list = [
    { title: 'Active button', content: '1' },
    { title: 'Default button', content: '2' },
    { title: 'Disabled button', content: '3', disabled: true },
  ];
  return (
    <>
      <Additional_L_normal>Dimension - l</Additional_L_normal>
      <Separator />
      <ButtonGroup dimension={'l'}>
        {list.map((item, index) => {
          return (
            <ButtonGroupItem key={index} active={index === 0} disabled={item.disabled}>
              {item.title}
            </ButtonGroupItem>
          );
        })}
      </ButtonGroup>
      <Separator />
      <Additional_L_normal>Dimension - m</Additional_L_normal>
      <Separator />
      <ButtonGroup dimension={'m'}>
        {list.map((item, index) => {
          return (
            <ButtonGroupItem key={index} active={index === 0} disabled={item.disabled}>
              {item.title}
            </ButtonGroupItem>
          );
        })}
      </ButtonGroup>
      <Separator />
      <Additional_L_normal>Dimension - s</Additional_L_normal>
      <Separator />
      <ButtonGroup dimension={'s'}>
        {list.map((item, index) => {
          return (
            <ButtonGroupItem key={index} active={index === 0} disabled={item.disabled}>
              {item.title}
            </ButtonGroupItem>
          );
        })}
      </ButtonGroup>
    </>
  );
};

const ButtonGroupWithIconDemo = () => (
  <ButtonGroup dimension={'l'}>
    <ButtonGroupItem active>
      <StarSolid width={20} />
      <Devider />
      Active button
    </ButtonGroupItem>
    <ButtonGroupItem>Default button</ButtonGroupItem>
    <ButtonGroupItem disabled>
      Disabled button
      <Devider />
      <StarSolid width={17} />
    </ButtonGroupItem>
  </ButtonGroup>
);

const Template: Story<React.ComponentPropsWithoutRef<typeof ButtonGroup>> = ({ dimension, className, ...props }) => {
  const [active, setActive] = useState(0);

  const list = [{ title: 'Active button' }, { title: 'Default button' }, { title: 'Disabled button', disabled: true }];

  return (
    <ButtonGroup dimension={dimension} className={className} {...props}>
      {list.map((item, index) => (
        <ButtonGroupItem
          key={index}
          active={index === active}
          onClick={() => setActive(index)}
          disabled={item.disabled}
        >
          {item.title}
        </ButtonGroupItem>
      ))}
    </ButtonGroup>
  );
};

export const Example = ButtonGroupDemo.bind({});

export const ButtonGroupWithIcon = ButtonGroupWithIconDemo.bind({});
export const Playground = Template.bind({});
Playground.args = {};
