import React from 'react';
import styled from 'styled-components';
import { Meta, Story } from '@storybook/react';
import { withDesign } from 'storybook-addon-designs';

import { Tag, TagProps } from '../Tag';
import { Tags } from '../Tags';

const Desc = styled.div`
  font-family: 'VTB Group UI';
  font-size: 16px;
  line-height: 24px;
`;

const Description = () => (
  <Desc>
    Тег — это метка, размечающая и каталогизирующая информацию для облегчения процесса поиска. При нажатии на тэг
    загружаются все элементы имеющие эту метку.
  </Desc>
);

export default {
  title: 'Example/Tag',
  decorators: [withDesign],
  component: Tag,
  parameters: {
    componentSubtitle: <Description />,
    layout: 'centered',
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/nwmAE2QMjzDD1FECyC2EUL/01-%E2%9C%85-UI-Kit-2.1-Internet-bank?node-id=76653%3A4',
    },
  },
  argTypes: {
    kind: {
      options: ['neutral', 'blue', 'green', 'red', 'orange'],
      control: { type: 'radio' },
    },
    width: {
      control: { type: 'text' },
    },
  },
} as Meta;

const Template0: Story<TagProps> = (args) => {
  return <Tag {...args}>Playground</Tag>;
};

const Template1: Story<TagProps> = () => {
  return (
    <Tags>
      <Tag>Neutral</Tag>
      <Tag kind="green">Green</Tag>
      <Tag kind="blue">Blue</Tag>
      <Tag kind="red">Red</Tag>
      <Tag kind="orange">Orange</Tag>
    </Tags>
  );
};

const Template2: Story<TagProps> = () => {
  return (
    <Tags>
      <Tag onClick={() => console.log('click active tag')}>Active</Tag>
      <Tag>Passive</Tag>
    </Tags>
  );
};

const Template3: Story<TagProps> = (args) => {
  return <Tag width={150}>Если текст длинее ширины тэга, добавляется тултип </Tag>;
};

export const Playground = Template0.bind({});
Playground.args = {};
Playground.storyName = 'Tag. Playground.';

export const TagStatus = Template1.bind({});
TagStatus.args = {};
TagStatus.storyName = 'Tag. Статус.';
TagStatus.parameters = {
  docs: {
    description: {
      story: `Тэг может иметь цветную статусную метку.`,
    },
  },
};

export const TagState = Template2.bind({});
TagState.args = {};
TagState.storyName = 'Tag. Активный и пассивный.';
TagState.parameters = {
  docs: {
    description: {
      story: `Тэги могут быть как активными и служить, например, каталагизаторами, так и пассивными, просто отображая
            принадлежность элемента к некоторой группе элементов имеющих общий признак.`,
    },
  },
};

export const TagTooltip = Template3.bind({});
TagTooltip.args = {};
TagTooltip.storyName = 'Tag. Тултип.';
TagTooltip.parameters = {
  docs: {
    description: {
      story: `В случае ограниченного пространства используется тултип.`,
    },
  },
};
