import { IUser } from './types';

export const unique = (arr: Array<any>): Array<any> => {
    let result: Array<any> = [];
    if (arr && arr.length) {
        arr.forEach(item => !result.includes(item) && result.push(item));
    }
    return result;
};

type IntersectionArg = Array<any> | string | undefined;

export const isIntersection = (argOne: IntersectionArg, argTwo: IntersectionArg): boolean => {
    return !!argOne && !!argTwo && (function () {
        const arrOne = Array.isArray(argOne) ? argOne : [ argOne ];
        const arrTwo = Array.isArray(argTwo) ? argTwo : [ argTwo ];
        return arrOne.some(t => arrTwo.includes(t));
    }());
};

export const isValidUser = (user: IUser): boolean => {
    return !!user && !!user.id && !!user.status && Array.isArray(user.roles);
}