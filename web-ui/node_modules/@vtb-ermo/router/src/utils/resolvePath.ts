import { resolveRouteToString } from './resolveRouteToString';

export const resolvePath = <T, R>(routesConfig: T, to: R & { pathname: string }): R | undefined => {
    switch (typeof to) {
        case 'object':
            if (Array.isArray(to)){
                return to.map(item => {
                    return typeof item === 'string' ? item : resolveRouteToString<T>(routesConfig, item);
                }) as unknown as R;
            } else {
                return typeof to.pathname === 'object'
                    ? { ...to, pathname: resolveRouteToString<T>(routesConfig, to.pathname) }
                    : resolveRouteToString<T>(routesConfig, to) as unknown as R;
            }
        case 'string':
        case 'function':
            return to;
        default:
            return undefined;
    }
};