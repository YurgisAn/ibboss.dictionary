import { forIn } from 'lodash';

export const resolveRouteToString = <T>(routesConfig: T, route: object): string | boolean => {

    const resultPath: Array<string> = [];
    let deepIndex: number = 0;
    let wasResolved: boolean = false;

    const deepSearch = (routes: any, route: any) => {
        forIn(routes, item => {
            if (wasResolved) return false;
            if (item?.params?.relativePath) {
                resultPath[deepIndex] = item.params.relativePath;
            }
            if (typeof item === 'object') {
                if (item === route) wasResolved = true;
                else {
                    deepIndex++;
                    deepSearch(item, route);
                    !wasResolved && deepIndex--;
                }
            }
        });
    };

    deepSearch(routesConfig, route);

    return wasResolved && resultPath
        .slice(0, ++deepIndex)
        .join('/')
        .replaceAll(/\/+/g, '/');

};