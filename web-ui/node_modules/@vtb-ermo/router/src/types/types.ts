import { routesConfig } from '../routes';

type OmitDistributive<T, K extends PropertyKey> = T extends any ? (T extends object ? OmitRecursively<T, K> : T) : never
type OmitRecursively<T extends any, K extends PropertyKey> = Omit<{ [P in keyof T]: OmitDistributive<T[P], K> }, K>

export type RoutesConfig = typeof routesConfig;
export type RoutesKeysConfig = OmitRecursively<RoutesConfig, 'params'>